#include<iostream>
#include<string.h>
using namespace std;

class Person //pure abstract class //abstraction
{
    public:
    virtual void getDetails()=0;
    virtual void getRole()=0;
    virtual ~Person() {}
};

class Student : public Person // encapsulation & inheritance
{
    private:
    int rollNo;
    string name;
    string sub[3];
    int marks[3];

    public:
    Student(int r,string n,string s[],int m[])
    {
        rollNo=r;
        name=n;
        for(int i=0;i<3;i++)
        {
            sub[i]=s[i];
            marks[i]=m[i];
        }
    }

    void getDetails() override
    {
        cout<<"Roll no : "<<rollNo<<endl;
        cout<<"Student Name : "<<name<<endl;
        cout<<"Subjects chosen : ";
        for(int i=0;i<3;i++)
        {
            cout<<sub[i]<<" ";
        }
        cout<<"\n";
        cout<<"Marks obtained : ";
        for(int i=0;i<3;i++)
        {
            cout<<marks[i]<<" ";
        }
        cout<<"\naverage of marks is : "<<average()<<"\n";
    }
    void getRole() override
    {
        cout<<"Student";
    }

    double average()
    {
        double sum=0;
        for(int i=0;i<3;i++)
        {
            sum=sum+marks[i];
        }
        return sum/3;
    }

};

class Faculty : public Person
{
    private:
    int empId;
    string name;
    string sub_a[2];

    public:
    Faculty(int e,string name1,string s[])
    {
        empId=e;
        name=name1;
        for(int i=0;i<2;i++)
        {
            sub_a[i]=s[i];
        }
    }

    void getDetails() override
    {
        cout<<"Employee id : "<<empId<<endl;
        cout<<"Employee name : "<<name<<endl;
        cout<<"subject assigned : ";
        for(int i=0;i<2;i++)
        {
            cout<<sub_a[i];
        }
        cout<<"\n";

    }
    void getRole() override
    {
        cout<<"Faculty";
    }

};

int main()
{
    string subject[]={"CPP","C","JAVA"};
    int mark[]={90,85,90};
    Person* s1 = new Student(101,"Pranav",subject,mark);

    string subject_a[]={"C","CPP"};
    Person* f1 = new Faculty(201,"Sampada",subject_a);

    cout<<"---------------------------------\n";
    s1->getRole();
    cout<<" info :"<<endl;
    s1->getDetails();

    cout<<"---------------------------------\n";
    f1->getRole();//to call getRole of faculty
    cout<<" info :"<<endl;
    f1->getDetails();//to call getDetails of Faculty

    delete s1;
    delete f1;
}

